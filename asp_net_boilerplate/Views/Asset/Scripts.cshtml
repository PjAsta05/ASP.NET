@model IEnumerable<asp_net_boilerplate.Models.tag_number_model>

<script>
    $(document).ready(function () {
        loadAutoComplete();
        reloadTable();
        $("#cat").select2();
        $("#object_type").select2();
    });

    function reloadTable() {
        var table = $('#equipmentTable').DataTable({
            "processing": true,
            "serverSide": true,
            "bDestroy": true,
            "filter": false,
            "orderMulti": false,
            "pageLength": 10,
            "pagesToCache": 3,
            "bInfo": false,
            "ajax": {
                "url": "/Asset/List",
                "type": "POST",
                "data": { "tag_number": $("#tag_number_filter").val() },
                "datatype": "json"
            },
            "columns": [
                {
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                { "data": "equipment", "name": "Equipment Number", "autoWidth": true },
                { "data": "tag_number", "name": "Tag Number", "autoWidth": true },
                { "data": "description", "name": "Description", "autoWidth": true },
                { "data": "cat", "name": "Category", "autoWidth": true },
                { "data": "object_type", "name": "Object Type", "autoWidth": true },
                { "data": "action", "name": "action", "autoWidth": true }
            ]
        });
    };

    function loadAutoComplete() {
        var tagNumberList = [];

        @foreach (var ele in Model) {
            @: tagNumberList.push('@ele.tag_number');
        }

        new autoComplete({
            selector: 'input[name="tag_number_filter"]',
            minChars: 2,
            source: function (term, suggest) {
                term = term.toLowerCase();
                var choices = tagNumberList;
                var matches = [];
                for (i = 0; i < choices.length; i++)
                    if (~choices[i].toLowerCase().indexOf(term)) matches.push(choices[i]);
                suggest(matches);
            }
        });
    };

    function AddData() {
        $("#reset").trigger("click");
        $("#dataModal").modal("show");
    };

    function EditData(equipment) {
        $.ajax({
            type: 'GET',
            url: '/Asset/Get',
            data: { equipment: equipment},
            success: function (data) {
                $("#equipment").val(data.equipment);
                $("#tag_number").val(data.tag_number);
                $("#description").val(data.description);
                $("#cat").val(data.cat);
                $("#object_type").val(data.object_type);
                $("#dataModal").modal("show");
            }
        });
    };

    function DeleteData(equipment) {
        swal({
            title: "Delete data?",
            text: "Are you sure want to delete data?",
            buttons: {
                delete: {
                    text: "Delete!",
                    className: "btn-danger",
                    value: "delete",
                },
                cancel: "No, Cancel",
            },
        }).then(function (value) {
            switch (value) {
                case "delete":
                    $.ajax({
                        type: 'POST',
                        url: '/Asset/Delete',
                        data: { equipment: equipment },
                        success: function (data) {
                            if (data == "success") {
                                swal("Success!", "Delete data sucessfully!", "success");
                                reloadTable();
                            } else if (data == "failed") {
                                swal("Error!", "Failed to delete data!", "error");
                            } else {
                                swal("Error!", "Failed to delete with error code : " + data.status, "error");
                            }
                        }
                    });
                    break;
                default:
                    swal("Cancelled!", "You cancelled to delete this data!", "success");
            }
        });
    };

    $("#filterData").submit(function (e) {
        e.preventDefault();
        reloadTable();
    });

    $("#saveForm").submit(function (e) {
        e.preventDefault();
        reloadTable();
    });

    $("#saveForm").submit(function (e) {
        e.preventDefault();

        var formData = $(this).serialize();

        swal({
            title: "Save data?",
            text: "Are you sure want to save data?",
            buttons: {
                save: {
                    text: "Save!",
                    value: "save",
                },
                cancel: "No, Cancel",
            },
        }).then(function (value) {
            switch (value) {
                case "save":
                    $.ajax({
                        type: 'POST',
                        url: '/Asset/Store',
                        data: formData,
                        success: function (data) {
                            if (data == "success") {
                                $("#dataModal").modal("hide");
                                swal("Success!", "Save data sucessfully!", "success");
                                reloadTable();
                            } else if (data == "failed") {
                                swal("Error!", "Failed to save data!", "error");
                            } else {
                                swal("Error!", "Failed to save with error code : " + data.status, "error");
                            }
                        }
                    });
                    break;
                default:
                    swal("Cancelled!", "You cancelled to save this data!", "success");
            }
        });
    });
</script>